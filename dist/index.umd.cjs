(function(u,d){typeof exports=="object"&&typeof module<"u"?d(exports):typeof define=="function"&&define.amd?define(["exports"],d):(u=typeof globalThis<"u"?globalThis:u||self,d(u.PrettyHttpClient={}))})(this,function(u){"use strict";const d=e=>{var a,h,R,l;const r=T=>(y,x)=>b(t,{...x,url:y,method:T}),t={prefix:(e==null?void 0:e.prefix)??"",alias:(e==null?void 0:e.alias)??"",headers:{...e==null?void 0:e.headers},hooks:{beforeRequest:((a=e==null?void 0:e.hooks)==null?void 0:a.beforeRequest)||[],afterResponse:((h=e==null?void 0:e.hooks)==null?void 0:h.afterResponse)||[],beforeRetry:((R=e==null?void 0:e.hooks)==null?void 0:R.beforeRetry)||[],catchError:((l=e==null?void 0:e.hooks)==null?void 0:l.catchError)||[]},retryCount:(e==null?void 0:e.retryCount)??0,retryTimeout:(e==null?void 0:e.retryTimeout)??0,cache:new D((e==null?void 0:e.cacheSize)??1e4),get:r("GET"),post:r("POST"),put:r("PUT"),delete:r("DELETE"),patch:r("PATCH"),head:r("HEAD")};return t},b=async(e,r)=>{var E,k,P,S,g,q,o;const t=Object.assign(r,{headers:{...e.headers,...r.headers},searchParams:{...r.searchParams},data:r.data||null,extra:r.extra||{}}),a=r.retryCount??e.retryCount,h=((E=r.hooks)==null?void 0:E.beforeRequest)??e.hooks.beforeRequest??[];for(const c of h)await c(e,t);const l=(r.prefix??e.prefix)+t.url,T=Object.fromEntries(Object.entries(t.searchParams).filter(([c,f])=>f!=null)),y=new URLSearchParams(T).toString(),x=y?`${l}?${y}`:l;let n;t.method!=="GET"&&t.method!=="HEAD"&&(t.data instanceof FormData?n=t.data:typeof t.data=="object"&&t.data!==null?n=JSON.stringify(t.data):n=t.data);let s;const j=((k=r.cache)==null?void 0:k.milliseconds)??0,C=typeof((P=r.cache)==null?void 0:P.matcher)=="function";let m;if(C&&(m=(S=r.cache)==null?void 0:S.matcher(e,t),m)){const c=e.cache.get(m);c&&(await i(0),s=c.clone())}try{if(s===void 0&&(s=await fetch(x,{method:t.method,body:n,headers:t.headers}),C&&m&&s.ok&&e.cache.set(m,s.clone(),j),!s.ok&&a>0)){const c=((g=r.hooks)==null?void 0:g.beforeRetry)??e.hooks.beforeRetry??[];for(const f of c)f(e,r);return await i(e.retryTimeout),b(e,{...r,retryCount:a-1})}}catch(c){const f=((q=r.hooks)==null?void 0:q.catchError)??e.hooks.catchError??[];for(const H of f)H(c);if(a>0)return await i(e.retryTimeout),b(e,{...r,retryCount:a-1});throw c}let w=s;const z=((o=r.hooks)==null?void 0:o.afterResponse)??e.hooks.afterResponse??[];for(const c of z){const f=await c(e,t,w);f!==void 0&&(w=f)}return w},i=(e=0)=>new Promise(r=>setTimeout(()=>r(),e));class D{constructor(r){this.cache=new Map,this.maxSize=r}set(r,t,a){if(this.cache.has(r)&&this.delete(r),this.cache.set(r,{value:t,expirationTime:a>0?Date.now()+a:null}),this.size>this.maxSize){const h=this.cache.keys().next().value;h&&this.delete(h)}}get(r){const t=this.cache.get(r);if(!t)return null;const{value:a,expirationTime:h}=t;return h!==null&&Date.now()>h?(this.delete(r),null):(this.delete(r),this.cache.set(r,t),a)}get size(){return this.cache.size}clear(){this.cache.clear()}delete(r){return this.cache.delete(r)}}u.createHttpClient=d,Object.defineProperty(u,Symbol.toStringTag,{value:"Module"})});
