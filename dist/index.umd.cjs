(function(u,m){typeof exports=="object"&&typeof module<"u"?m(exports):typeof define=="function"&&define.amd?define(["exports"],m):(u=typeof globalThis<"u"?globalThis:u||self,m(u.PrettyHttpClient={}))})(this,function(u){"use strict";const m=e=>{var c,h,f,n;const t=y=>(l,d)=>T(r,{...d,url:l,method:y}),r={prefix:(e==null?void 0:e.prefix)??"",alias:(e==null?void 0:e.alias)??"",headers:{...e==null?void 0:e.headers},hooks:{beforeRequest:((c=e==null?void 0:e.hooks)==null?void 0:c.beforeRequest)||[],afterResponse:((h=e==null?void 0:e.hooks)==null?void 0:h.afterResponse)||[],beforeRetry:((f=e==null?void 0:e.hooks)==null?void 0:f.beforeRetry)||[],catchError:((n=e==null?void 0:e.hooks)==null?void 0:n.catchError)||[]},retryCount:(e==null?void 0:e.retryCount)??0,retryTimeout:(e==null?void 0:e.retryTimeout)??0,get:t("GET"),post:t("POST"),put:t("PUT"),delete:t("DELETE"),patch:t("PATCH"),head:t("HEAD")};return r},T=async(e,t)=>{var P,R;const r=Object.assign(t,{headers:{...e.headers,...t.headers},searchParams:t.searchParams||{},data:t.data||null}),c=t.retryCount??e.retryCount;for(const a of e.hooks.beforeRequest??[])await a(e,r);const h=e.prefix+r.url,f=Object.fromEntries(Object.entries(r.searchParams).filter(([a,s])=>s!=null)),n=new URLSearchParams(f).toString(),y=n?`${h}?${n}`:h;let l;r.method!=="GET"&&r.method!=="HEAD"&&(r.data instanceof FormData?l=r.data:typeof r.data=="object"&&r.data!==null?l=JSON.stringify(r.data):l=r.data);let d;const E=((P=t.cache)==null?void 0:P.milliseconds)??0,w=E>0;let i;if(w&&(i=(R=t.cache)==null?void 0:R.matcher(e,r),i)){const a=C.get(i);a&&(await b(0),d=a.clone())}try{d===void 0&&(d=await fetch(y,{method:r.method,body:l,headers:r.headers}),w&&i&&C.set(i,d.clone(),E));let a=d;for(const s of e.hooks.afterResponse){const g=await s(e,r,a);g!==void 0&&(a=g)}return a}catch(a){if(c>0){for(const s of e.hooks.beforeRetry)s(e,t);return await b(e.retryTimeout),T(e,{...t,retryCount:c-1})}for(const s of e.hooks.catchError)s(a);throw a}},b=(e=0)=>new Promise(t=>setTimeout(()=>t(),e));class o{constructor(t){this.cache=new Map,this.maxSize=t}set(t,r,c){this.cache.has(t)&&this.cache.delete(t);const h=Date.now()+c;if(this.cache.set(t,{value:r,expirationTime:h}),this.size>this.maxSize){const f=this.cache.keys().next().value;f&&this.cache.delete(f)}}get(t){const r=this.cache.get(t);if(!r)return null;const{value:c,expirationTime:h}=r;return Date.now()>h?(this.cache.delete(t),null):(this.cache.delete(t),this.cache.set(t,r),c)}get size(){return this.cache.size}}const C=new o(1e4);u.createHttpClient=m,Object.defineProperty(u,Symbol.toStringTag,{value:"Module"})});
