(function(u,m){typeof exports=="object"&&typeof module<"u"?m(exports):typeof define=="function"&&define.amd?define(["exports"],m):(u=typeof globalThis<"u"?globalThis:u||self,m(u.PrettyHttpClient={}))})(this,function(u){"use strict";const m=e=>{var c,h,f,y;const r=n=>(l,s)=>b(t,{...s,url:l,method:n}),t={prefix:(e==null?void 0:e.prefix)??"",alias:(e==null?void 0:e.alias)??"",headers:{...e==null?void 0:e.headers},hooks:{beforeRequest:((c=e==null?void 0:e.hooks)==null?void 0:c.beforeRequest)||[],afterResponse:((h=e==null?void 0:e.hooks)==null?void 0:h.afterResponse)||[],beforeRetry:((f=e==null?void 0:e.hooks)==null?void 0:f.beforeRetry)||[],catchError:((y=e==null?void 0:e.hooks)==null?void 0:y.catchError)||[]},retryCount:(e==null?void 0:e.retryCount)??0,retryTimeout:(e==null?void 0:e.retryTimeout)??0,cache:new S((e==null?void 0:e.cacheSize)??1e4),get:r("GET"),post:r("POST"),put:r("PUT"),delete:r("DELETE"),patch:r("PATCH"),head:r("HEAD")};return t},b=async(e,r)=>{var P,R;const t=Object.assign(r,{headers:{...e.headers,...r.headers},searchParams:r.searchParams||{},data:r.data||null}),c=r.retryCount??e.retryCount;for(const a of e.hooks.beforeRequest??[])await a(e,t);const h=e.prefix+t.url,f=Object.fromEntries(Object.entries(t.searchParams).filter(([a,d])=>d!=null)),y=new URLSearchParams(f).toString(),n=y?`${h}?${y}`:h;let l;t.method!=="GET"&&t.method!=="HEAD"&&(t.data instanceof FormData?l=t.data:typeof t.data=="object"&&t.data!==null?l=JSON.stringify(t.data):l=t.data);let s;const C=((P=r.cache)==null?void 0:P.milliseconds)??0,E=C>0;let i;if(E&&(i=(R=r.cache)==null?void 0:R.matcher(e,t),i)){const a=e.cache.get(i);a&&(await w(0),s=a.clone())}try{if(s===void 0&&(s=await fetch(n,{method:t.method,body:l,headers:t.headers}),E&&i&&s.ok&&e.cache.set(i,s.clone(),C),!s.ok&&c>0)){for(const a of e.hooks.beforeRetry)a(e,r);return await w(e.retryTimeout),b(e,{...r,retryCount:c-1})}}catch(a){for(const d of e.hooks.catchError)d(a);throw a}let T=s;for(const a of e.hooks.afterResponse){const d=await a(e,t,T);d!==void 0&&(T=d)}return T},w=(e=0)=>new Promise(r=>setTimeout(()=>r(),e));class S{constructor(r){this.cache=new Map,this.maxSize=r}set(r,t,c){this.cache.has(r)&&this.delete(r);const h=Date.now()+c;if(this.cache.set(r,{value:t,expirationTime:h}),this.size>this.maxSize){const f=this.cache.keys().next().value;f&&this.delete(f)}}get(r){const t=this.cache.get(r);if(!t)return null;const{value:c,expirationTime:h}=t;return Date.now()>h?(this.delete(r),null):(this.delete(r),this.cache.set(r,t),c)}get size(){return this.cache.size}clear(){this.cache.clear()}delete(r){return this.cache.delete(r)}}u.createHttpClient=m,Object.defineProperty(u,Symbol.toStringTag,{value:"Module"})});
