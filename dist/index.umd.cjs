(function(u,m){typeof exports=="object"&&typeof module<"u"?m(exports):typeof define=="function"&&define.amd?define(["exports"],m):(u=typeof globalThis<"u"?globalThis:u||self,m(u.PrettyHttpClient={}))})(this,function(u){"use strict";const m=e=>{var c,h,s,d;const t=l=>(f,y)=>T(r,{...y,url:f,method:l}),r={prefix:(e==null?void 0:e.prefix)??"",alias:(e==null?void 0:e.alias)??"",headers:{...e==null?void 0:e.headers},hooks:{beforeRequest:((c=e==null?void 0:e.hooks)==null?void 0:c.beforeRequest)||[],afterResponse:((h=e==null?void 0:e.hooks)==null?void 0:h.afterResponse)||[],beforeRetry:((s=e==null?void 0:e.hooks)==null?void 0:s.beforeRetry)||[],catchError:((d=e==null?void 0:e.hooks)==null?void 0:d.catchError)||[]},retryCount:(e==null?void 0:e.retryCount)??0,retryTimeout:(e==null?void 0:e.retryTimeout)??0,get:t("GET"),post:t("POST"),put:t("PUT"),delete:t("DELETE"),patch:t("PATCH"),head:t("HEAD")};return r},T=async(e,t)=>{var E,R;const r=Object.assign(t,{headers:{...e.headers,...t.headers},searchParams:t.searchParams||{},data:t.data||null}),c=t.retryCount??e.retryCount;for(const a of e.hooks.beforeRequest??[])await a(e,r);const h=e.prefix+r.url,s=new URLSearchParams(r.searchParams).toString(),d=s?`${h}?${s}`:h;let l;r.method!=="GET"&&r.method!=="HEAD"&&(r.data instanceof FormData?l=r.data:typeof r.data=="object"&&r.data!==null?l=JSON.stringify(r.data):l=r.data);let f;const y=((E=t.cache)==null?void 0:E.milliseconds)??0,w=y>0;let i;if(w){((R=t.cache)==null?void 0:R.matchType)==="url"?i=d:i=d.split("?")[0];const a=b.get(i);a&&(await C(0),f=a.clone())}try{f===void 0&&(f=await fetch(d,{method:r.method,body:l,headers:r.headers}),w&&b.set(i,f.clone(),y));let a=f;for(const n of e.hooks.afterResponse){const g=await n(e,r,a);a!==void 0&&(a=g)}return a}catch(a){if(c>0){for(const n of e.hooks.beforeRetry)n(e,t);return await C(e.retryTimeout),T(e,{...t,retryCount:c-1})}for(const n of e.hooks.catchError)n(a);throw a}},C=(e=0)=>new Promise(t=>setTimeout(()=>t(),e));class P{constructor(t){this.cache=new Map,this.maxSize=t}set(t,r,c){this.cache.has(t)&&this.cache.delete(t);const h=Date.now()+c;if(this.cache.set(t,{value:r,expirationTime:h}),this.size>this.maxSize){const s=this.cache.keys().next().value;s&&this.cache.delete(s)}}get(t){const r=this.cache.get(t);if(!r)return null;const{value:c,expirationTime:h}=r;return Date.now()>h?(this.cache.delete(t),null):(this.cache.delete(t),this.cache.set(t,r),c)}get size(){return this.cache.size}}const b=new P(1e4);u.createHttpClient=m,Object.defineProperty(u,Symbol.toStringTag,{value:"Module"})});
