(function(u,m){typeof exports=="object"&&typeof module<"u"?m(exports):typeof define=="function"&&define.amd?define(["exports"],m):(u=typeof globalThis<"u"?globalThis:u||self,m(u.PrettyHttpClient={}))})(this,function(u){"use strict";const m=e=>{var c,h,f,y;const r=i=>(l,d)=>T(a,{...d,url:l,method:i}),a={prefix:(e==null?void 0:e.prefix)??"",alias:(e==null?void 0:e.alias)??"",headers:{...e==null?void 0:e.headers},hooks:{beforeRequest:((c=e==null?void 0:e.hooks)==null?void 0:c.beforeRequest)||[],afterResponse:((h=e==null?void 0:e.hooks)==null?void 0:h.afterResponse)||[],beforeRetry:((f=e==null?void 0:e.hooks)==null?void 0:f.beforeRetry)||[],catchError:((y=e==null?void 0:e.hooks)==null?void 0:y.catchError)||[]},retryCount:(e==null?void 0:e.retryCount)??0,retryTimeout:(e==null?void 0:e.retryTimeout)??0,cache:new S((e==null?void 0:e.cacheSize)??1e4),get:r("GET"),post:r("POST"),put:r("PUT"),delete:r("DELETE"),patch:r("PATCH"),head:r("HEAD")};return a},T=async(e,r)=>{var E,P;const a=Object.assign(r,{headers:{...e.headers,...r.headers},searchParams:r.searchParams||{},data:r.data||null}),c=r.retryCount??e.retryCount;for(const t of e.hooks.beforeRequest??[])await t(e,a);const h=e.prefix+a.url,f=Object.fromEntries(Object.entries(a.searchParams).filter(([t,s])=>s!=null)),y=new URLSearchParams(f).toString(),i=y?`${h}?${y}`:h;let l;a.method!=="GET"&&a.method!=="HEAD"&&(a.data instanceof FormData?l=a.data:typeof a.data=="object"&&a.data!==null?l=JSON.stringify(a.data):l=a.data);let d;const w=((E=r.cache)==null?void 0:E.milliseconds)??0,C=w>0;let n;if(C&&(n=(P=r.cache)==null?void 0:P.matcher(e,a),n)){const t=e.cache.get(n);t&&(await b(0),d=t.clone())}try{d===void 0&&(d=await fetch(i,{method:a.method,body:l,headers:a.headers}),C&&n&&e.cache.set(n,d.clone(),w));let t=d;for(const s of e.hooks.afterResponse){const R=await s(e,a,t);R!==void 0&&(t=R)}return t}catch(t){if(c>0){for(const s of e.hooks.beforeRetry)s(e,r);return await b(e.retryTimeout),T(e,{...r,retryCount:c-1})}for(const s of e.hooks.catchError)s(t);throw t}},b=(e=0)=>new Promise(r=>setTimeout(()=>r(),e));class S{constructor(r){this.cache=new Map,this.maxSize=r}set(r,a,c){this.cache.has(r)&&this.cache.delete(r);const h=Date.now()+c;if(this.cache.set(r,{value:a,expirationTime:h}),this.size>this.maxSize){const f=this.cache.keys().next().value;f&&this.cache.delete(f)}}get(r){const a=this.cache.get(r);if(!a)return null;const{value:c,expirationTime:h}=a;return Date.now()>h?(this.cache.delete(r),null):(this.cache.delete(r),this.cache.set(r,a),c)}get size(){return this.cache.size}clear(){this.cache.clear()}}u.createHttpClient=m,Object.defineProperty(u,Symbol.toStringTag,{value:"Module"})});
